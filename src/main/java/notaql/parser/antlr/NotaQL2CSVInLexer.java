// Generated from notaql\parser\antlr\NotaQL2CSVIn.g4 by ANTLR 4.2.1
package notaql.parser.antlr;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class NotaQL2CSVInLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__6=1, T__5=2, T__4=3, T__3=4, T__2=5, T__1=6, T__0=7, Col=8, Val=9, 
		Split=10, SL_COMMENT=11, OPTWS=12, OPTNL=13, IN=14, OUT=15, ARROW=16, 
		EQ=17, NEQ=18, LT=19, LTEQ=20, GT=21, GTEQ=22, AND=23, OR=24, PLUS=25, 
		MINUS=26, DIV=27, TRUE=28, FALSE=29, Int=30, Float=31, String=32, AVG=33, 
		COUNT=34, MAX=35, MIN=36, SUM=37, IMPLODE=38, LIST=39, OBJECT=40, Name=41, 
		OPEN=42, CLOSE=43, ARRAYOPEN=44, ARRAYCLOSE=45, RESOLVE=46, PREDICATE=47, 
		STAR=48, AT=49, DOT=50, COLON=51;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'IN-FILTER'", "'OUT-ENGINE:'", "';'", "'!'", "'IN-ENGINE:'", "'OUT-FILTER'", 
		"','", "'_c'", "'_v'", "'split'", "SL_COMMENT", "OPTWS", "OPTNL", "'IN'", 
		"'OUT'", "'<-'", "'='", "'!='", "'<'", "'<='", "'>'", "'>='", "'&&'", 
		"'||'", "'+'", "'-'", "'/'", "'true'", "'false'", "Int", "Float", "String", 
		"'AVG'", "'COUNT'", "'MAX'", "'MIN'", "'SUM'", "'IMPLODE'", "'LIST'", 
		"'OBJECT'", "Name", "'('", "')'", "'['", "']'", "'$'", "'?'", "'*'", "'@'", 
		"'.'", "':'"
	};
	public static final String[] ruleNames = {
		"T__6", "T__5", "T__4", "T__3", "T__2", "T__1", "T__0", "Col", "Val", 
		"Split", "SL_COMMENT", "OPTWS", "OPTNL", "IN", "OUT", "ARROW", "EQ", "NEQ", 
		"LT", "LTEQ", "GT", "GTEQ", "AND", "OR", "PLUS", "MINUS", "DIV", "TRUE", 
		"FALSE", "Int", "Float", "String", "AVG", "COUNT", "MAX", "MIN", "SUM", 
		"IMPLODE", "LIST", "OBJECT", "Name", "OPEN", "CLOSE", "ARRAYOPEN", "ARRAYCLOSE", 
		"RESOLVE", "PREDICATE", "STAR", "AT", "DOT", "COLON"
	};


	public NotaQL2CSVInLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "NotaQL2CSVIn.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\65\u0149\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3"+
		"\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3"+
		"\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\t"+
		"\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\7\f\u00aa\n"+
		"\f\f\f\16\f\u00ad\13\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\16\5\16\u00b8"+
		"\n\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\21\3\21"+
		"\3\21\3\22\3\22\3\23\3\23\3\23\3\24\3\24\3\25\3\25\3\25\3\26\3\26\3\27"+
		"\3\27\3\27\3\30\3\30\3\30\3\31\3\31\3\31\3\32\3\32\3\33\3\33\3\34\3\34"+
		"\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\36\3\37\6\37\u00ef"+
		"\n\37\r\37\16\37\u00f0\3 \6 \u00f4\n \r \16 \u00f5\3 \3 \6 \u00fa\n \r"+
		" \16 \u00fb\3!\3!\7!\u0100\n!\f!\16!\u0103\13!\3!\3!\3\"\3\"\3\"\3\"\3"+
		"#\3#\3#\3#\3#\3#\3$\3$\3$\3$\3%\3%\3%\3%\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3"+
		"\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3)\3)\3)\3)\3)\3)\3)\3*\6*\u0132\n*\r*\16"+
		"*\u0133\3+\3+\3,\3,\3-\3-\3.\3.\3/\3/\3\60\3\60\3\61\3\61\3\62\3\62\3"+
		"\63\3\63\3\64\3\64\3\u00ab\2\65\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23"+
		"\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31"+
		"\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60"+
		"_\61a\62c\63e\64g\65\3\2\6\4\2\13\13\"\"\3\2\62;\5\2\f\f\17\17))\6\2\62"+
		";C\\aac|\u014f\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3"+
		"\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2"+
		"\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3"+
		"\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2"+
		"\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\2"+
		"9\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3"+
		"\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2"+
		"\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2"+
		"_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\3i\3\2\2\2\5s\3"+
		"\2\2\2\7\177\3\2\2\2\t\u0081\3\2\2\2\13\u0083\3\2\2\2\r\u008e\3\2\2\2"+
		"\17\u0099\3\2\2\2\21\u009b\3\2\2\2\23\u009e\3\2\2\2\25\u00a1\3\2\2\2\27"+
		"\u00a7\3\2\2\2\31\u00b2\3\2\2\2\33\u00b7\3\2\2\2\35\u00bd\3\2\2\2\37\u00c0"+
		"\3\2\2\2!\u00c4\3\2\2\2#\u00c7\3\2\2\2%\u00c9\3\2\2\2\'\u00cc\3\2\2\2"+
		")\u00ce\3\2\2\2+\u00d1\3\2\2\2-\u00d3\3\2\2\2/\u00d6\3\2\2\2\61\u00d9"+
		"\3\2\2\2\63\u00dc\3\2\2\2\65\u00de\3\2\2\2\67\u00e0\3\2\2\29\u00e2\3\2"+
		"\2\2;\u00e7\3\2\2\2=\u00ee\3\2\2\2?\u00f3\3\2\2\2A\u00fd\3\2\2\2C\u0106"+
		"\3\2\2\2E\u010a\3\2\2\2G\u0110\3\2\2\2I\u0114\3\2\2\2K\u0118\3\2\2\2M"+
		"\u011c\3\2\2\2O\u0124\3\2\2\2Q\u0129\3\2\2\2S\u0131\3\2\2\2U\u0135\3\2"+
		"\2\2W\u0137\3\2\2\2Y\u0139\3\2\2\2[\u013b\3\2\2\2]\u013d\3\2\2\2_\u013f"+
		"\3\2\2\2a\u0141\3\2\2\2c\u0143\3\2\2\2e\u0145\3\2\2\2g\u0147\3\2\2\2i"+
		"j\7K\2\2jk\7P\2\2kl\7/\2\2lm\7H\2\2mn\7K\2\2no\7N\2\2op\7V\2\2pq\7G\2"+
		"\2qr\7T\2\2r\4\3\2\2\2st\7Q\2\2tu\7W\2\2uv\7V\2\2vw\7/\2\2wx\7G\2\2xy"+
		"\7P\2\2yz\7I\2\2z{\7K\2\2{|\7P\2\2|}\7G\2\2}~\7<\2\2~\6\3\2\2\2\177\u0080"+
		"\7=\2\2\u0080\b\3\2\2\2\u0081\u0082\7#\2\2\u0082\n\3\2\2\2\u0083\u0084"+
		"\7K\2\2\u0084\u0085\7P\2\2\u0085\u0086\7/\2\2\u0086\u0087\7G\2\2\u0087"+
		"\u0088\7P\2\2\u0088\u0089\7I\2\2\u0089\u008a\7K\2\2\u008a\u008b\7P\2\2"+
		"\u008b\u008c\7G\2\2\u008c\u008d\7<\2\2\u008d\f\3\2\2\2\u008e\u008f\7Q"+
		"\2\2\u008f\u0090\7W\2\2\u0090\u0091\7V\2\2\u0091\u0092\7/\2\2\u0092\u0093"+
		"\7H\2\2\u0093\u0094\7K\2\2\u0094\u0095\7N\2\2\u0095\u0096\7V\2\2\u0096"+
		"\u0097\7G\2\2\u0097\u0098\7T\2\2\u0098\16\3\2\2\2\u0099\u009a\7.\2\2\u009a"+
		"\20\3\2\2\2\u009b\u009c\7a\2\2\u009c\u009d\7e\2\2\u009d\22\3\2\2\2\u009e"+
		"\u009f\7a\2\2\u009f\u00a0\7x\2\2\u00a0\24\3\2\2\2\u00a1\u00a2\7u\2\2\u00a2"+
		"\u00a3\7r\2\2\u00a3\u00a4\7n\2\2\u00a4\u00a5\7k\2\2\u00a5\u00a6\7v\2\2"+
		"\u00a6\26\3\2\2\2\u00a7\u00ab\7%\2\2\u00a8\u00aa\13\2\2\2\u00a9\u00a8"+
		"\3\2\2\2\u00aa\u00ad\3\2\2\2\u00ab\u00ac\3\2\2\2\u00ab\u00a9\3\2\2\2\u00ac"+
		"\u00ae\3\2\2\2\u00ad\u00ab\3\2\2\2\u00ae\u00af\7\f\2\2\u00af\u00b0\3\2"+
		"\2\2\u00b0\u00b1\b\f\2\2\u00b1\30\3\2\2\2\u00b2\u00b3\t\2\2\2\u00b3\u00b4"+
		"\3\2\2\2\u00b4\u00b5\b\r\2\2\u00b5\32\3\2\2\2\u00b6\u00b8\7\17\2\2\u00b7"+
		"\u00b6\3\2\2\2\u00b7\u00b8\3\2\2\2\u00b8\u00b9\3\2\2\2\u00b9\u00ba\7\f"+
		"\2\2\u00ba\u00bb\3\2\2\2\u00bb\u00bc\b\16\2\2\u00bc\34\3\2\2\2\u00bd\u00be"+
		"\7K\2\2\u00be\u00bf\7P\2\2\u00bf\36\3\2\2\2\u00c0\u00c1\7Q\2\2\u00c1\u00c2"+
		"\7W\2\2\u00c2\u00c3\7V\2\2\u00c3 \3\2\2\2\u00c4\u00c5\7>\2\2\u00c5\u00c6"+
		"\7/\2\2\u00c6\"\3\2\2\2\u00c7\u00c8\7?\2\2\u00c8$\3\2\2\2\u00c9\u00ca"+
		"\7#\2\2\u00ca\u00cb\7?\2\2\u00cb&\3\2\2\2\u00cc\u00cd\7>\2\2\u00cd(\3"+
		"\2\2\2\u00ce\u00cf\7>\2\2\u00cf\u00d0\7?\2\2\u00d0*\3\2\2\2\u00d1\u00d2"+
		"\7@\2\2\u00d2,\3\2\2\2\u00d3\u00d4\7@\2\2\u00d4\u00d5\7?\2\2\u00d5.\3"+
		"\2\2\2\u00d6\u00d7\7(\2\2\u00d7\u00d8\7(\2\2\u00d8\60\3\2\2\2\u00d9\u00da"+
		"\7~\2\2\u00da\u00db\7~\2\2\u00db\62\3\2\2\2\u00dc\u00dd\7-\2\2\u00dd\64"+
		"\3\2\2\2\u00de\u00df\7/\2\2\u00df\66\3\2\2\2\u00e0\u00e1\7\61\2\2\u00e1"+
		"8\3\2\2\2\u00e2\u00e3\7v\2\2\u00e3\u00e4\7t\2\2\u00e4\u00e5\7w\2\2\u00e5"+
		"\u00e6\7g\2\2\u00e6:\3\2\2\2\u00e7\u00e8\7h\2\2\u00e8\u00e9\7c\2\2\u00e9"+
		"\u00ea\7n\2\2\u00ea\u00eb\7u\2\2\u00eb\u00ec\7g\2\2\u00ec<\3\2\2\2\u00ed"+
		"\u00ef\t\3\2\2\u00ee\u00ed\3\2\2\2\u00ef\u00f0\3\2\2\2\u00f0\u00ee\3\2"+
		"\2\2\u00f0\u00f1\3\2\2\2\u00f1>\3\2\2\2\u00f2\u00f4\t\3\2\2\u00f3\u00f2"+
		"\3\2\2\2\u00f4\u00f5\3\2\2\2\u00f5\u00f3\3\2\2\2\u00f5\u00f6\3\2\2\2\u00f6"+
		"\u00f7\3\2\2\2\u00f7\u00f9\7\60\2\2\u00f8\u00fa\t\3\2\2\u00f9\u00f8\3"+
		"\2\2\2\u00fa\u00fb\3\2\2\2\u00fb\u00f9\3\2\2\2\u00fb\u00fc\3\2\2\2\u00fc"+
		"@\3\2\2\2\u00fd\u0101\7)\2\2\u00fe\u0100\n\4\2\2\u00ff\u00fe\3\2\2\2\u0100"+
		"\u0103\3\2\2\2\u0101\u00ff\3\2\2\2\u0101\u0102\3\2\2\2\u0102\u0104\3\2"+
		"\2\2\u0103\u0101\3\2\2\2\u0104\u0105\7)\2\2\u0105B\3\2\2\2\u0106\u0107"+
		"\7C\2\2\u0107\u0108\7X\2\2\u0108\u0109\7I\2\2\u0109D\3\2\2\2\u010a\u010b"+
		"\7E\2\2\u010b\u010c\7Q\2\2\u010c\u010d\7W\2\2\u010d\u010e\7P\2\2\u010e"+
		"\u010f\7V\2\2\u010fF\3\2\2\2\u0110\u0111\7O\2\2\u0111\u0112\7C\2\2\u0112"+
		"\u0113\7Z\2\2\u0113H\3\2\2\2\u0114\u0115\7O\2\2\u0115\u0116\7K\2\2\u0116"+
		"\u0117\7P\2\2\u0117J\3\2\2\2\u0118\u0119\7U\2\2\u0119\u011a\7W\2\2\u011a"+
		"\u011b\7O\2\2\u011bL\3\2\2\2\u011c\u011d\7K\2\2\u011d\u011e\7O\2\2\u011e"+
		"\u011f\7R\2\2\u011f\u0120\7N\2\2\u0120\u0121\7Q\2\2\u0121\u0122\7F\2\2"+
		"\u0122\u0123\7G\2\2\u0123N\3\2\2\2\u0124\u0125\7N\2\2\u0125\u0126\7K\2"+
		"\2\u0126\u0127\7U\2\2\u0127\u0128\7V\2\2\u0128P\3\2\2\2\u0129\u012a\7"+
		"Q\2\2\u012a\u012b\7D\2\2\u012b\u012c\7L\2\2\u012c\u012d\7G\2\2\u012d\u012e"+
		"\7E\2\2\u012e\u012f\7V\2\2\u012fR\3\2\2\2\u0130\u0132\t\5\2\2\u0131\u0130"+
		"\3\2\2\2\u0132\u0133\3\2\2\2\u0133\u0131\3\2\2\2\u0133\u0134\3\2\2\2\u0134"+
		"T\3\2\2\2\u0135\u0136\7*\2\2\u0136V\3\2\2\2\u0137\u0138\7+\2\2\u0138X"+
		"\3\2\2\2\u0139\u013a\7]\2\2\u013aZ\3\2\2\2\u013b\u013c\7_\2\2\u013c\\"+
		"\3\2\2\2\u013d\u013e\7&\2\2\u013e^\3\2\2\2\u013f\u0140\7A\2\2\u0140`\3"+
		"\2\2\2\u0141\u0142\7,\2\2\u0142b\3\2\2\2\u0143\u0144\7B\2\2\u0144d\3\2"+
		"\2\2\u0145\u0146\7\60\2\2\u0146f\3\2\2\2\u0147\u0148\7<\2\2\u0148h\3\2"+
		"\2\2\n\2\u00ab\u00b7\u00f0\u00f5\u00fb\u0101\u0133\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}