// Generated from notaql\parser\antlr\NotaQL2DocumentOut.g4 by ANTLR 4.2.1
package notaql.parser.antlr;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class NotaQL2DocumentOutLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__6=1, T__5=2, T__4=3, T__3=4, T__2=5, T__1=6, T__0=7, Id=8, SL_COMMENT=9, 
		OPTWS=10, OPTNL=11, IN=12, OUT=13, ARROW=14, EQ=15, NEQ=16, LT=17, LTEQ=18, 
		GT=19, GTEQ=20, AND=21, OR=22, PLUS=23, MINUS=24, DIV=25, TRUE=26, FALSE=27, 
		Int=28, Float=29, String=30, AVG=31, COUNT=32, MAX=33, MIN=34, SUM=35, 
		IMPLODE=36, LIST=37, OBJECT=38, Name=39, OPEN=40, CLOSE=41, ARRAYOPEN=42, 
		ARRAYCLOSE=43, RESOLVE=44, PREDICATE=45, STAR=46, AT=47, DOT=48, COLON=49;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'IN-FILTER'", "'OUT-ENGINE:'", "';'", "'!'", "'IN-ENGINE:'", "'OUT-FILTER'", 
		"','", "'_id'", "SL_COMMENT", "OPTWS", "OPTNL", "'IN'", "'OUT'", "'<-'", 
		"'='", "'!='", "'<'", "'<='", "'>'", "'>='", "'&&'", "'||'", "'+'", "'-'", 
		"'/'", "'true'", "'false'", "Int", "Float", "String", "'AVG'", "'COUNT'", 
		"'MAX'", "'MIN'", "'SUM'", "'IMPLODE'", "'LIST'", "'OBJECT'", "Name", 
		"'('", "')'", "'['", "']'", "'$'", "'?'", "'*'", "'@'", "'.'", "':'"
	};
	public static final String[] ruleNames = {
		"T__6", "T__5", "T__4", "T__3", "T__2", "T__1", "T__0", "Id", "SL_COMMENT", 
		"OPTWS", "OPTNL", "IN", "OUT", "ARROW", "EQ", "NEQ", "LT", "LTEQ", "GT", 
		"GTEQ", "AND", "OR", "PLUS", "MINUS", "DIV", "TRUE", "FALSE", "Int", "Float", 
		"String", "AVG", "COUNT", "MAX", "MIN", "SUM", "IMPLODE", "LIST", "OBJECT", 
		"Name", "OPEN", "CLOSE", "ARRAYOPEN", "ARRAYCLOSE", "RESOLVE", "PREDICATE", 
		"STAR", "AT", "DOT", "COLON"
	};


	public NotaQL2DocumentOutLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "NotaQL2DocumentOut.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\63\u013d\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\3\2\3\2\3\2\3"+
		"\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3"+
		"\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3"+
		"\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\t\3\t\3\t\3\t\3\n\3\n"+
		"\7\n\u009e\n\n\f\n\16\n\u00a1\13\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13"+
		"\3\f\5\f\u00ac\n\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\17"+
		"\3\17\3\17\3\20\3\20\3\21\3\21\3\21\3\22\3\22\3\23\3\23\3\23\3\24\3\24"+
		"\3\25\3\25\3\25\3\26\3\26\3\26\3\27\3\27\3\27\3\30\3\30\3\31\3\31\3\32"+
		"\3\32\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\34\3\35\6\35"+
		"\u00e3\n\35\r\35\16\35\u00e4\3\36\6\36\u00e8\n\36\r\36\16\36\u00e9\3\36"+
		"\3\36\6\36\u00ee\n\36\r\36\16\36\u00ef\3\37\3\37\7\37\u00f4\n\37\f\37"+
		"\16\37\u00f7\13\37\3\37\3\37\3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3\"\3\"\3\""+
		"\3\"\3#\3#\3#\3#\3$\3$\3$\3$\3%\3%\3%\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3"+
		"\'\3\'\3\'\3\'\3\'\3\'\3\'\3(\6(\u0126\n(\r(\16(\u0127\3)\3)\3*\3*\3+"+
		"\3+\3,\3,\3-\3-\3.\3.\3/\3/\3\60\3\60\3\61\3\61\3\62\3\62\3\u009f\2\63"+
		"\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20"+
		"\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37"+
		"= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63\3\2\6\4\2\13\13\"\""+
		"\3\2\62;\5\2\f\f\17\17))\6\2\62;C\\aac|\u0143\2\3\3\2\2\2\2\5\3\2\2\2"+
		"\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3"+
		"\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2"+
		"\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2"+
		"\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2"+
		"\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2"+
		"\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2"+
		"\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y"+
		"\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\3e\3\2"+
		"\2\2\5o\3\2\2\2\7{\3\2\2\2\t}\3\2\2\2\13\177\3\2\2\2\r\u008a\3\2\2\2\17"+
		"\u0095\3\2\2\2\21\u0097\3\2\2\2\23\u009b\3\2\2\2\25\u00a6\3\2\2\2\27\u00ab"+
		"\3\2\2\2\31\u00b1\3\2\2\2\33\u00b4\3\2\2\2\35\u00b8\3\2\2\2\37\u00bb\3"+
		"\2\2\2!\u00bd\3\2\2\2#\u00c0\3\2\2\2%\u00c2\3\2\2\2\'\u00c5\3\2\2\2)\u00c7"+
		"\3\2\2\2+\u00ca\3\2\2\2-\u00cd\3\2\2\2/\u00d0\3\2\2\2\61\u00d2\3\2\2\2"+
		"\63\u00d4\3\2\2\2\65\u00d6\3\2\2\2\67\u00db\3\2\2\29\u00e2\3\2\2\2;\u00e7"+
		"\3\2\2\2=\u00f1\3\2\2\2?\u00fa\3\2\2\2A\u00fe\3\2\2\2C\u0104\3\2\2\2E"+
		"\u0108\3\2\2\2G\u010c\3\2\2\2I\u0110\3\2\2\2K\u0118\3\2\2\2M\u011d\3\2"+
		"\2\2O\u0125\3\2\2\2Q\u0129\3\2\2\2S\u012b\3\2\2\2U\u012d\3\2\2\2W\u012f"+
		"\3\2\2\2Y\u0131\3\2\2\2[\u0133\3\2\2\2]\u0135\3\2\2\2_\u0137\3\2\2\2a"+
		"\u0139\3\2\2\2c\u013b\3\2\2\2ef\7K\2\2fg\7P\2\2gh\7/\2\2hi\7H\2\2ij\7"+
		"K\2\2jk\7N\2\2kl\7V\2\2lm\7G\2\2mn\7T\2\2n\4\3\2\2\2op\7Q\2\2pq\7W\2\2"+
		"qr\7V\2\2rs\7/\2\2st\7G\2\2tu\7P\2\2uv\7I\2\2vw\7K\2\2wx\7P\2\2xy\7G\2"+
		"\2yz\7<\2\2z\6\3\2\2\2{|\7=\2\2|\b\3\2\2\2}~\7#\2\2~\n\3\2\2\2\177\u0080"+
		"\7K\2\2\u0080\u0081\7P\2\2\u0081\u0082\7/\2\2\u0082\u0083\7G\2\2\u0083"+
		"\u0084\7P\2\2\u0084\u0085\7I\2\2\u0085\u0086\7K\2\2\u0086\u0087\7P\2\2"+
		"\u0087\u0088\7G\2\2\u0088\u0089\7<\2\2\u0089\f\3\2\2\2\u008a\u008b\7Q"+
		"\2\2\u008b\u008c\7W\2\2\u008c\u008d\7V\2\2\u008d\u008e\7/\2\2\u008e\u008f"+
		"\7H\2\2\u008f\u0090\7K\2\2\u0090\u0091\7N\2\2\u0091\u0092\7V\2\2\u0092"+
		"\u0093\7G\2\2\u0093\u0094\7T\2\2\u0094\16\3\2\2\2\u0095\u0096\7.\2\2\u0096"+
		"\20\3\2\2\2\u0097\u0098\7a\2\2\u0098\u0099\7k\2\2\u0099\u009a\7f\2\2\u009a"+
		"\22\3\2\2\2\u009b\u009f\7%\2\2\u009c\u009e\13\2\2\2\u009d\u009c\3\2\2"+
		"\2\u009e\u00a1\3\2\2\2\u009f\u00a0\3\2\2\2\u009f\u009d\3\2\2\2\u00a0\u00a2"+
		"\3\2\2\2\u00a1\u009f\3\2\2\2\u00a2\u00a3\7\f\2\2\u00a3\u00a4\3\2\2\2\u00a4"+
		"\u00a5\b\n\2\2\u00a5\24\3\2\2\2\u00a6\u00a7\t\2\2\2\u00a7\u00a8\3\2\2"+
		"\2\u00a8\u00a9\b\13\2\2\u00a9\26\3\2\2\2\u00aa\u00ac\7\17\2\2\u00ab\u00aa"+
		"\3\2\2\2\u00ab\u00ac\3\2\2\2\u00ac\u00ad\3\2\2\2\u00ad\u00ae\7\f\2\2\u00ae"+
		"\u00af\3\2\2\2\u00af\u00b0\b\f\2\2\u00b0\30\3\2\2\2\u00b1\u00b2\7K\2\2"+
		"\u00b2\u00b3\7P\2\2\u00b3\32\3\2\2\2\u00b4\u00b5\7Q\2\2\u00b5\u00b6\7"+
		"W\2\2\u00b6\u00b7\7V\2\2\u00b7\34\3\2\2\2\u00b8\u00b9\7>\2\2\u00b9\u00ba"+
		"\7/\2\2\u00ba\36\3\2\2\2\u00bb\u00bc\7?\2\2\u00bc \3\2\2\2\u00bd\u00be"+
		"\7#\2\2\u00be\u00bf\7?\2\2\u00bf\"\3\2\2\2\u00c0\u00c1\7>\2\2\u00c1$\3"+
		"\2\2\2\u00c2\u00c3\7>\2\2\u00c3\u00c4\7?\2\2\u00c4&\3\2\2\2\u00c5\u00c6"+
		"\7@\2\2\u00c6(\3\2\2\2\u00c7\u00c8\7@\2\2\u00c8\u00c9\7?\2\2\u00c9*\3"+
		"\2\2\2\u00ca\u00cb\7(\2\2\u00cb\u00cc\7(\2\2\u00cc,\3\2\2\2\u00cd\u00ce"+
		"\7~\2\2\u00ce\u00cf\7~\2\2\u00cf.\3\2\2\2\u00d0\u00d1\7-\2\2\u00d1\60"+
		"\3\2\2\2\u00d2\u00d3\7/\2\2\u00d3\62\3\2\2\2\u00d4\u00d5\7\61\2\2\u00d5"+
		"\64\3\2\2\2\u00d6\u00d7\7v\2\2\u00d7\u00d8\7t\2\2\u00d8\u00d9\7w\2\2\u00d9"+
		"\u00da\7g\2\2\u00da\66\3\2\2\2\u00db\u00dc\7h\2\2\u00dc\u00dd\7c\2\2\u00dd"+
		"\u00de\7n\2\2\u00de\u00df\7u\2\2\u00df\u00e0\7g\2\2\u00e08\3\2\2\2\u00e1"+
		"\u00e3\t\3\2\2\u00e2\u00e1\3\2\2\2\u00e3\u00e4\3\2\2\2\u00e4\u00e2\3\2"+
		"\2\2\u00e4\u00e5\3\2\2\2\u00e5:\3\2\2\2\u00e6\u00e8\t\3\2\2\u00e7\u00e6"+
		"\3\2\2\2\u00e8\u00e9\3\2\2\2\u00e9\u00e7\3\2\2\2\u00e9\u00ea\3\2\2\2\u00ea"+
		"\u00eb\3\2\2\2\u00eb\u00ed\7\60\2\2\u00ec\u00ee\t\3\2\2\u00ed\u00ec\3"+
		"\2\2\2\u00ee\u00ef\3\2\2\2\u00ef\u00ed\3\2\2\2\u00ef\u00f0\3\2\2\2\u00f0"+
		"<\3\2\2\2\u00f1\u00f5\7)\2\2\u00f2\u00f4\n\4\2\2\u00f3\u00f2\3\2\2\2\u00f4"+
		"\u00f7\3\2\2\2\u00f5\u00f3\3\2\2\2\u00f5\u00f6\3\2\2\2\u00f6\u00f8\3\2"+
		"\2\2\u00f7\u00f5\3\2\2\2\u00f8\u00f9\7)\2\2\u00f9>\3\2\2\2\u00fa\u00fb"+
		"\7C\2\2\u00fb\u00fc\7X\2\2\u00fc\u00fd\7I\2\2\u00fd@\3\2\2\2\u00fe\u00ff"+
		"\7E\2\2\u00ff\u0100\7Q\2\2\u0100\u0101\7W\2\2\u0101\u0102\7P\2\2\u0102"+
		"\u0103\7V\2\2\u0103B\3\2\2\2\u0104\u0105\7O\2\2\u0105\u0106\7C\2\2\u0106"+
		"\u0107\7Z\2\2\u0107D\3\2\2\2\u0108\u0109\7O\2\2\u0109\u010a\7K\2\2\u010a"+
		"\u010b\7P\2\2\u010bF\3\2\2\2\u010c\u010d\7U\2\2\u010d\u010e\7W\2\2\u010e"+
		"\u010f\7O\2\2\u010fH\3\2\2\2\u0110\u0111\7K\2\2\u0111\u0112\7O\2\2\u0112"+
		"\u0113\7R\2\2\u0113\u0114\7N\2\2\u0114\u0115\7Q\2\2\u0115\u0116\7F\2\2"+
		"\u0116\u0117\7G\2\2\u0117J\3\2\2\2\u0118\u0119\7N\2\2\u0119\u011a\7K\2"+
		"\2\u011a\u011b\7U\2\2\u011b\u011c\7V\2\2\u011cL\3\2\2\2\u011d\u011e\7"+
		"Q\2\2\u011e\u011f\7D\2\2\u011f\u0120\7L\2\2\u0120\u0121\7G\2\2\u0121\u0122"+
		"\7E\2\2\u0122\u0123\7V\2\2\u0123N\3\2\2\2\u0124\u0126\t\5\2\2\u0125\u0124"+
		"\3\2\2\2\u0126\u0127\3\2\2\2\u0127\u0125\3\2\2\2\u0127\u0128\3\2\2\2\u0128"+
		"P\3\2\2\2\u0129\u012a\7*\2\2\u012aR\3\2\2\2\u012b\u012c\7+\2\2\u012cT"+
		"\3\2\2\2\u012d\u012e\7]\2\2\u012eV\3\2\2\2\u012f\u0130\7_\2\2\u0130X\3"+
		"\2\2\2\u0131\u0132\7&\2\2\u0132Z\3\2\2\2\u0133\u0134\7A\2\2\u0134\\\3"+
		"\2\2\2\u0135\u0136\7,\2\2\u0136^\3\2\2\2\u0137\u0138\7B\2\2\u0138`\3\2"+
		"\2\2\u0139\u013a\7\60\2\2\u013ab\3\2\2\2\u013b\u013c\7<\2\2\u013cd\3\2"+
		"\2\2\n\2\u009f\u00ab\u00e4\u00e9\u00ef\u00f5\u0127\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}